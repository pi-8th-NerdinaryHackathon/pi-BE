// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Company {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(100)
  number     String    @db.VarChar(100)
  address    String    @db.VarChar(100)
  adressSpec String    @db.VarChar(100)
  detail     String    @db.Text
  products   Product[]

  @@map("company")
}

model Product {
  id               Int               @id @default(autoincrement())
  name             String            @db.VarChar(100)
  detail           String            @db.Text
  image            String            @db.VarChar(100)
  price            Int?
  company          Company           @relation(fields: [companyId], references: [id])
  companyId        Int
  category         Category          @relation(fields: [categoryId], references: [id])
  categoryId       Int
  ProductMaterials ProductMaterial[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  UserWish         UserWish[]

  @@index([companyId], name: "idx_company_id")
  @@index([categoryId], name: "idx_category_id")
  @@map("product")
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(100)
  products Product[]

  @@map("category")
}

model Material {
  id               Int               @id @default(autoincrement())
  name             String            @db.VarChar(100)
  ProductMaterials ProductMaterial[]
  SearchKeyword    SearchKeyword[]

  @@map("material")
}

model ProductMaterial {
  id         Int      @id @default(autoincrement())
  productId  Int
  product    Product  @relation(fields: [productId], references: [id])
  materialId Int
  material   Material @relation(fields: [materialId], references: [id])

  @@index([productId], name: "idx_product_id")
  @@index([materialId], name: "idx_material_id")
  @@map("product_material")
}

model SearchKeyword {
  id         Int      @id @default(autoincrement())
  keyword    String   @db.VarChar(100) // ex: "캔 참치"
  materialId Int
  material   Material @relation(fields: [materialId], references: [id])

  @@index([materialId], name: "idx_material_id")
  @@map("search_keyword")
}

model User {
  id       Int        @id @default(autoincrement())
  uuid     String     @db.VarChar(255)
  UserWish UserWish[]
}

model UserWish {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  productId Int
  product   Product @relation(fields: [productId], references: [id])

  @@index([userId], name: "idx_user_id")
  @@index([productId], name: "idx_product_id")
  @@map("user_wish")
}
